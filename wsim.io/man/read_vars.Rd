% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_vars.R
\name{read_vars}
\alias{read_vars}
\title{Read one or more variables from raster files}
\usage{
read_vars(
  vardef,
  expect.nvars = NULL,
  expect.vars = NULL,
  expect.dims = NULL,
  expect.extent = NULL,
  expect.ids = NULL,
  offset = NULL,
  count = NULL,
  as.data.frame = FALSE,
  extra_dims = NULL
)
}
\arguments{
\item{vardef}{A variable definition, constructed
              using the following syntax:
              <filename>::<variables_or_bands>
              where \code{<variables_or_bands> } is a comma-separated list
              of band numbers or variable names.

              A limited amount of transformation can be specified by adding
              extra characters to the band number or variable name:
              \itemize{
              \item{Variables can be renamed by appending \code{->new_var_name}}
              \item{Data can be transformed by appending transformations such as
                    \code{@negate@fill0 }}
              }

              A complete example is:
              \code{PETmE_freq_trgt201701.img::1@fill0@negate->Neg_PETmE}

              In this example, band 1 is read from the file. NODATA values
              are replaced with zero, and all values are negated. The values
              are read into a variable called \code{Neg_PETmE}.}

\item{expect.nvars}{If specified, \code{read_vars} will throw an
error unless exactly \code{expect.nvars}
variables are read from the file.}

\item{expect.vars}{If specified, \code{read_vars} will throw an
error if the list of variables read from the
file (after renaming transformations) does not
match \code{expect.vars}, irrespective of
order.}

\item{expect.dims}{If specified, \code{read_vars} will throw an
error if dimensions of read data are not
equal to \code{expect.dims}.}

\item{expect.extent}{If specified, \code{read_vars} will throw an
error if extent of read data is not exactly
\code{expect.extent}.}

\item{expect.ids}{If specified, \code{read_vars} will throw an
error if ids of read data are not exactly
and in the same order as \code{expect.ids}.}

\item{offset}{Specifies dimension-wise (X, Y, ...) offsets
from the upper-left corner of the raster
(xmin, ymax) from which reading should begin.
A value of c(1,1) refers to the corner cell
itself (i.e., there is no offset). This
follows the convention of the \code{ncdf4}
package. If \code{offset} is specified, then
\code{count} must also be specified.}

\item{count}{Specifies dimension-wise (X, Y, ...) numbers of
cells to read, beginning at the origin cell
specified by \code{offset}. A value of \code{-1}
signifies that all values after the origin cell
should be read. If \code{count} is specified, then
\code{origin} must also be specified.}

\item{as.data.frame}{If \code{TRUE}, \code{read_vars} will return a
data frame}

\item{extra_dims}{list containing names and values of extra dimensions
along which a values at a single point should be extracted, e.g.
\code{extra_dims=list(crop='maize', quantile=0.50)}. It provides
a higher-abstraction alternative to the use of \code{offset} and
\code{count}.}
}
\value{
A list having the following structure:
\describe{
\item{attrs}{a list of global attributes in the file}
\item{data}{a list of matrices containing data for each
            variable in the file.  Matrices are consistent
            with the "raster" package, with rows representing
            decreasing latitude and columns representing
            increasing longitude.  Any netCDF attributes defined
            for the variables will be attached as attributes of the
            matrix.}
\item{extent}{the extent of the lat/lon coordinates for the data,
              in the order xmin, xmax, ymin, ymax. Will be null if
              the data is not gridded}
\item{ids}{a vector of integer ids for the data. Will be null if
           the data is gridded}
}
}
\description{
Read one or more variables from raster files
}
