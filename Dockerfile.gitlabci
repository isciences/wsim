FROM ubuntu:22.04

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
  cmake \
  curl \
  g++ \
  gcc \
  gdal-bin \
  gfortran \
  libc-dev \
  libcurl4-openssl-dev \
  libfontconfig1-dev \
  libfribidi-dev \
  libgdal-dev \
  libgeos-dev \
  libharfbuzz-dev \
  libnetcdf-dev \
  libproj-dev \
  libssl-dev \
  libssh2-1-dev \
  libudunits2-dev \
  libxml2-dev \
  locales \
  make \
  nco \
  netcdf-bin \
  pandoc \
  python3 \
  python3-distutils \
  python3-enchant \
  python3-gdal \
  r-base-core \
  r-base-dev \
  wget \
  && rm -rf /var/lib/apt/lists*

# Make GDAL work
ENV GDAL_DATA=/usr/share/gdal

# Install en_US.UTF-8. This avoids an R CMD check failure.
RUN sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen && \
    locale-gen

# Set locale to C.UTF-8. This avoids R CMD check failures with a locale error
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# Remove non-portable compiler flags from Debian's R config. The non-portable flags
# cause R CMD check to fail.
RUN sed -i 's/^CFLAGS =.*/CFLAGS= -O2 -g -Wall -pedantic/' /etc/R/Makeconf && \
    sed -i 's/^CXXFLAGS =.*/CXXFLAGS= -O2 -g -Wall -pedantic/' /etc/R/Makeconf && \
    sed -i 's/^CXX98FLAGS =.*/CXX98FLAGS= -O2 -g -Wall -pedantic/' /etc/R/Makeconf && \
    sed -i 's/^CXX11FLAGS =.*/CXX11FLAGS= -O2 -g -Wall -pedantic/' /etc/R/Makeconf && \
    sed -i 's/^CXX14FLAGS =.*/CXX14FLAGS= -O2 -g -Wall -pedantic/' /etc/R/Makeconf && \
    sed -i 's/^CXX17FLAGS =.*/CXX17FLAGS= -O2 -g -Wall -pedantic/' /etc/R/Makeconf

RUN echo "MAKEFLAGS = -j8" >> /etc/R/Makeconf

# Install packages in a loop (rather than providing a vector) so that 
# we can enforce a specific order. Some packages were failing to install
# because testthat.so could not be found.
RUN Rscript -e 'tryCatch(install.packages(c( \
  "Rcpp", \
  "codetools", \
  "testthat", \
  "abind", \
  "devtools", \
  "docopt", \
  "dplyr", \
  "exactextractr", \
  "fasterize", \
  "futile.logger", \
  "geosphere", \
  "remotes", \
  "lmom", \
  "lubridate", \
  "lwgeom", \
  "ncdf4", \
  "pkgdown", \
  "ranger", \
  "raster", \
  "readr", \
  "rgdal", \
  "rlang", \
  "roxygen2", \
  "sf", \
  "tidyr", \
  "units" \
), dependencies = NA, repos="http://cran.rstudio.com", Ncpus=parallel::detectCores()), warning=function(w) { stop(w); quit(status=1) }) '


# Add wgrib2 for converting CFS forecast data
# We need to compile it ourselves because the packaged version
# doesn't have support for regridding.
# Don't try parallel make here, it won't work.
RUN wget -P /tmp http://www.ftp.cpc.ncep.noaa.gov/wd51we/wgrib2/wgrib2.tgz && \
  cd /tmp && \
  tar xzvf wgrib2.tgz && \
  cd grib2 && \
  CC=gcc FC=gfortran make && \
  cp wgrib2/wgrib2 /usr/bin/wgrib2 && \
  cd /tmp && \
  rm -rf wgrib2.tgz && \
  rm -rf grib2  

RUN wget -P /tmp https://bootstrap.pypa.io/get-pip.py && \
    python3 /tmp/get-pip.py && \
    rm /tmp/get-pip.py && \
    pip3 install \
      cdsapi \
      fiona \
      sphinx \
      sphinx_rtd_theme \
      sphinxcontrib.spelling \
      sphinxcontrib.bibtex
 
# Install exactextract
RUN wget -P /tmp https://github.com/isciences/exactextract/archive/master.zip && \
    cd /tmp && \
    unzip master.zip && \
    rm master.zip && \
    cd exactextract-master && \
    mkdir cmake-build-release && \
    cd cmake-build-release && \
    cmake -DCMAKE_BUILD_TYPE=Release .. && \
    make exactextract_bin && \
    make install && \
    cd /tmp && \
    rm -rf exactextract-master

ADD https://s3.us-east-2.amazonaws.com/wsim-regression-data/testdata.tar.gz /
RUN tar xzvf testdata.tar.gz && mv testdata wsim_testdata

ENV WSIM_TEST_DATA /wsim_testdata
